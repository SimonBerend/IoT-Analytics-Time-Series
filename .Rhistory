server <- function(input, output) {
output$smooth_avg_en <- renderPlot({
ggplot(data = energy %>%
group_by(# create one column for year - month
date = format(energy$DateTime, "%Y-%m-%d")) %>%
summarise(energy_consumption = round(mean(global_wh), digits = 1)) %>%
filter(year(date) == input$SelectYear)) +
geom_smooth(aes(x = date, y = energy_consumption,
span = 0.15, se = FALSE)) +
labs(title = "Energy Consumption",
subtitle = "(Smoothened)",
y = "Consumption (avg Wh per minute)",
x = "Months")+
theme_bw() +
+ scale_x_datetime(date_breaks = "1 month", date_labels = "%m")    })
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
ui <- dashboardPage(
dashboardHeader(
title = "Energy Dashboard"),
dashboardSidebar(
sliderInput(
inputId = "Breaks",
label = "Choose the number of breaks in the histogram:",
min = 10,
max = 50,
value = 25),
selectInput(
inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010"))),
dashboardBody(
title = "Them Graphs",
box(plotOutput(outputId = "smooth_avg_en")),
box(plotOutput(outputId = "Histo_ActiveEnergy_avg"))
))
# Show Dashboard ----------------------------------------------------------
shinyApp(ui, server)
server <- function(input, output) {
output$smooth_avg_en <- renderPlot({
ggplot(data = energy %>%
group_by(# create one column for year - month
date = format(energy$DateTime, "%Y-%m-%d")) %>%
summarise(energy_consumption = round(mean(global_wh), digits = 1)) %>%
filter(year(date) == input$SelectYear)) +
geom_smooth(aes(x = date, y = energy_consumption,
span = 0.15, se = FALSE)) +
labs(title = "Energy Consumption",
subtitle = "(Smoothened)",
y = "Consumption (avg Wh per minute)",
x = "Months")+
theme_bw() +
scale_x_datetime(date_breaks = "1 month", date_labels = "%m")
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
ui <- dashboardPage(
dashboardHeader(
title = "Energy Dashboard"),
dashboardSidebar(
sliderInput(
inputId = "Breaks",
label = "Choose the number of breaks in the histogram:",
min = 10,
max = 50,
value = 25),
selectInput(
inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010"))),
dashboardBody(
title = "Them Graphs",
box(plotOutput(outputId = "smooth_avg_en")),
box(plotOutput(outputId = "Histo_ActiveEnergy_avg"))
))
# Show Dashboard ----------------------------------------------------------
shinyApp(ui, server)
str(format(energy$DateTime, "%Y-%m-%d"))
x <- format(energy$DateTime, "%Y-%m-%d")
str(x)
server <- function(input, output) {
output$smooth_avg_en <- renderPlot({
ggplot(data = energy %>%
group_by(# create one column for year - month
date = as.Date(format(energy$DateTime, "%Y-%m-%d"))) %>% # too much date/format?
summarise(energy_consumption = round(mean(global_wh), digits = 1)) %>%
filter(year(date) == input$SelectYear)) +
geom_smooth(aes(x = date, y = energy_consumption),
span = 0.15, se = FALSE) +
labs(title = "Energy Consumption",
subtitle = "(Smoothened)",
y = "Consumption (avg Wh per minute)",
x = "Months")+
theme_bw() +
scale_x_date(date_breaks = "1 month", date_labels = "%m")
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
ui <- dashboardPage(
dashboardHeader(
title = "Energy Dashboard"),
dashboardSidebar(
sliderInput(
inputId = "Breaks",
label = "Choose the number of breaks in the histogram:",
min = 10,
max = 50,
value = 25),
selectInput(
inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010"))),
dashboardBody(
title = "Them Graphs",
box(plotOutput(outputId = "smooth_avg_en")),
box(plotOutput(outputId = "Histo_ActiveEnergy_avg"))
))
# Show Dashboard ----------------------------------------------------------
shinyApp(ui, server)
?geom_smooth
server <- function(input, output) {
output$smooth_avg_en <- renderPlot({
ggplot(data = energy %>%
group_by(# create one column for year - month
date = as.Date(format(energy$DateTime, "%Y-%m-%d"))) %>% # too much date/format?
summarise(energy_consumption = round(mean(global_wh), digits = 1)) %>%
filter(year(date) == input$SelectYear)) +
geom_smooth(aes(x = date, y = energy_consumption),
span = 0.08, se = FALSE) +
labs(title = "Energy Consumption",
subtitle = "(Smoothened)",
y = "Consumption (avg Wh per minute)",
x = "Months")+
theme_bw() +
scale_x_date(date_breaks = "1 month", date_labels = "%m")
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
ui <- dashboardPage(
dashboardHeader(
title = "Energy Dashboard"),
dashboardSidebar(
sliderInput(
inputId = "Breaks",
label = "Choose the number of breaks in the histogram:",
min = 10,
max = 50,
value = 25),
selectInput(
inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010"))),
dashboardBody(
title = "Them Graphs",
box(plotOutput(outputId = "smooth_avg_en")),
box(plotOutput(outputId = "Histo_ActiveEnergy_avg"))
))
# Show Dashboard ----------------------------------------------------------
shinyApp(ui, server)
server <- function(input, output) {
output$smooth_avg_en <- renderPlot({
ggplot(data = energy %>%
group_by(# create one column for year - month
date = as.Date(energy$DateTime, "%Y-%m-%d")) %>%
summarise(energy_consumption = round(mean(global_wh), digits = 1)) %>%
filter(year(date) == input$SelectYear)) +
geom_smooth(aes(x = date, y = energy_consumption),
span = 0.08, se = FALSE) +
labs(title = "Energy Consumption",
subtitle = "(Smoothened)",
y = "Consumption (avg Wh per minute)",
x = "Months")+
theme_bw() +
scale_x_date(date_breaks = "1 month", date_labels = "%m")
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
# Show Dashboard ----------------------------------------------------------
shinyApp(ui, server)
server <- function(input, output) {
output$smooth_avg_en <- renderPlot({
ggplot(data = energy %>%
group_by(# create one column for year - month
date = as.Date(energy$DateTime, "%Y-%m-%d")) %>%
summarise(energy_consumption = round(mean(global_wh), digits = 1)) %>%
filter(year(date) == input$SelectYear)) +
geom_smooth(aes(x = date, y = energy_consumption),
span = 0.08, se = FALSE) +
labs(title = "Energy Consumption",
subtitle = "(Smoothened)",
y = "Consumption (avg Wh per minute)",
x = "Months")+
theme_bw() +
scale_x_date(date_breaks = "1 month", date_labels = "%b")
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
server <- function(input, output) {
output$smooth_avg_en <- renderPlot({
ggplot(data = energy %>%
group_by(# create one column for year - month
date = as.Date(energy$DateTime, "%Y-%m-%d")) %>%
summarise(energy_consumption = round(mean(global_wh), digits = 1)) %>%
filter(year(date) == input$SelectYear)) +
geom_smooth(aes(x = date, y = energy_consumption),
span = 0.08, se = FALSE) +
labs(title = "Energy Consumption",
subtitle = "(Smoothened)",
y = "Consumption (avg Wh per minute)",
x = "Months")+
theme_bw() +
scale_x_date(date_breaks = "1 month", date_labels = month.abb("%m"))
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
# Show Dashboard ----------------------------------------------------------
shinyApp(ui, server)
pacman::p_load("ggplot2", "shiny", "shinydashboard",
"shinythemes", "dplyr", "lubridate")
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Victim", tabName = "victim"),
menuItem("Trafficker", tabName = "trafficker")
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "victim",
h2("Victim tab")
),
tabItem(tabName = "trafficker",
h2("Trafficker tab")
)
)
)
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Human Trafficking"),
sidebar,
body
),
server = function(input, output) { }
)
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Overview", tabName = "Overview"),
menuItem("Trends", tabName = "Trends")
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "Overview",
h2("Overview of Energy Consumption")
),
tabItem(tabName = "Trends",
h2("Trends and Predictions")
)
)
)
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Your Energy"),
sidebar,
body
),
server = function(input, output) { }
)
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Overview", tabName = "Overview",
icon = icon(tachometer)),
menuItem("Trends", tabName = "Trends")
)
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "Overview",
h2("Overview of Energy Consumption")
),
tabItem(tabName = "Trends",
h2("Trends and Predictions")
)
)
)
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Your Energy"),
sidebar,
body
),
server = function(input, output) { }
)
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Overview", tabName = "Overview",
icon = icon("tachometer")),
menuItem("Trends", tabName = "Trends")
)
)
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Your Energy"),
sidebar,
body
),
server = function(input, output) { }
)
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Overview", tabName = "Overview",
icon = icon("tachometer")),
menuItem("Trends", tabName = "Trends",
icon = icon("line-chart"))
),
sliderInput(
inputId = "Breaks",
label = "Choose the number of breaks in the histogram:",
min = 10,
max = 50,
value = 25),
selectInput(
inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010"))
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "Overview",
h2("Overview of Energy Consumption"),
box(plotOutput(outputId = "Line_ActiveEnergy_avg")),
box(plotOutput(outputId = "Histo_ActiveEnergy_avg"))
),
tabItem(tabName = "Trends",
h2("Trends and Predictions")
)
)
)
server <- function(input, output) {
output$Line_ActiveEnergy_avg <- renderPlot({
ggplot(data = dashdata %>% filter(year(date) == input$SelectYear)) +
geom_line(aes(x = date, y = ActiveEnergy_avg)) +
ylab("Active energy") + xlab("Time")})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Your Energy"),
sidebar,
body
),
server
)
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Overview", tabName = "Overview",
icon = icon("tachometer")),
menuItem("Trends", tabName = "Trends",
icon = icon("line-chart"))
),
sliderInput(
inputId = "Breaks",
label = "Choose the number of breaks in the histogram:",
min = 10,
max = 50,
value = 25),
selectInput(
inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010"))
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "Overview",
h2("Overview of Energy Consumption"),
box(plotOutput(outputId = "smooth_avg")),
box(plotOutput(outputId = "Histo_ActiveEnergy_avg"))
),
tabItem(tabName = "Trends",
h2("Trends and Predictions")
)
)
)
server <- function(input, output) {
output$smooth_avg <- renderPlot({
ggplot(data = energy %>%
group_by( # daily
date = as.Date(energy$DateTime,"%Y-%m-%d")) %>%
summarise(overall_avg = round(mean(global_wh), digits = 1) %>%
filter(year(date) == input$SelectYear)) +
geom_line(aes(x = date, y = overall_avg)) +
labs(title = "Yearly E-Consumption",
subtitle = "(Smoothened)",
y = "avg Consumption in Wh per Minute",
x = "Months")+
scale_x_date(date_breaks = "1 week", date_labels = "%W"))
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Your Energy"),
sidebar,
body
),
server
)
?filter
x <- as.Date(energy$DateTime,"%Y-%m-%d", tz = "CET")
str(x)
summary(is.na(x))
sidebar <- dashboardSidebar(
sidebarMenu(
menuItem("Overview", tabName = "Overview",
icon = icon("tachometer")),
menuItem("Trends", tabName = "Trends",
icon = icon("line-chart"))
),
sliderInput(
inputId = "Breaks",
label = "Choose the number of breaks in the histogram:",
min = 10,
max = 50,
value = 25),
selectInput(
inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010"))
)
body <- dashboardBody(
tabItems(
tabItem(tabName = "Overview",
h2("Overview of Energy Consumption"),
box(plotOutput(outputId = "smooth_avg")),
box(plotOutput(outputId = "Histo_ActiveEnergy_avg"))
),
tabItem(tabName = "Trends",
h2("Trends and Predictions")
)
)
)
server <- function(input, output) {
output$smooth_avg <- renderPlot({
ggplot(data = energy %>%
group_by( # daily
date = as.Date(energy$DateTime,"%Y-%m-%d", tz = "CET")) %>%
summarise(overall_avg = round(mean(global_wh), digits = 1) %>%
filter(year(date) == input$SelectYear)) +
geom_line(aes(x = date, y = overall_avg)) +
labs(title = "Yearly E-Consumption",
subtitle = "(Smoothened)",
y = "avg Consumption in Wh per Minute",
x = "Months")+
scale_x_date(date_breaks = "1 week", date_labels = "%W"))
})
output$Histo_ActiveEnergy_avg <- renderPlot({
hist(dashdata$ActiveEnergy_avg,
breaks = input$Breaks,
main = "Distribution of Active E")
})
}
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Your Energy"),
sidebar,
body
),
server
)
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Your Energy"),
sidebar,
body
),
server
)
