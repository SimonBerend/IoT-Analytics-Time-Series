h3("makes your home awesome", align = "center"),
h5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet gravida ipsum, vitae semper leo. Pellentesque lobortis laoreet aliquam. Vivamus bibendum posuere est, vitae congue magna lacinia non. Suspendisse tempus ullamcorper condimentum. Duis id tortor sit amet dolor rutrum finibus. Sed lorem purus, rhoncus eu iaculis sed, varius vitae nulla.",
align = "center")),
mainPanel(width = 4,
plotOutput(outputId = "energy_logo")
)
)
),
tabPanel("Contact", icon = icon("address-card"),
sidebarLayout(
sidebarPanel = NULL,
mainPanel = mainPanel(
width = 6,
h3("Contact", align = "center"),
h4("Mr. Eric Foreman"),
h4("Senior Data Analyst"),
h4("Point Place, Wisconsin"),
h4("0800-HELLO WISCO")
)
)
)
)
)
# Server ------------------------------------------------------------------
server <- function(input, output) {
output$smooth_avg <- renderPlot({
ggplot(data = energy %>%
filter(year(Date) == input$SelectYear) %>%
group_by(Date) %>%
summarise(overall_avg = round(mean(global_wh), digits = 1))
) +
geom_smooth(aes(x = Date, y = overall_avg),
span = 0.1, se = F) +
labs(title = "Yearly E-Consumption",
subtitle = "(Smoothened)",
y = "avg Consumption in Wh per Minute",
x = "Months") +
scale_x_date(date_breaks = "1 month", date_labels = "%b")
})
output$bar_overview <- renderPlotly({
plot_ly(data = energy %>%
group_by(year, quarter) %>%
summarise(kitchen = round(sum(kitchen)/1000, digits = 1),
laundry = round(sum(laundry)/1000, digits = 1),
climat = round(sum(climat)/1000, digits = 1)) %>%
filter(year == input$SelectYear),
x = ~quarter, y = ~kitchen,
type = 'bar', name = 'Kitchen') %>%
add_trace(y = ~laundry, name = 'Laundry') %>%
add_trace(y= ~climat, name = 'Climat') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$bar_areas <- renderPlotly({
plot_ly(data = en_quart_subs %>%
filter(submeter == input$SelectSub),
x = ~quarter, y = ~yr07,
type = 'bar', name = '2007') %>%
add_trace(y = ~yr08, name = '2008') %>%
add_trace(y= ~yr09, name = '2009') %>%
add_trace(y= ~yr10, name = '2010') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$fc_trends_chart <- renderHighchart({fc_trends_chart
})
output$energy_logo <- renderPlot({
pic = readPNG('C:/Users/Gebruiker/Desktop/Esgitit/IoT Analytics/www/energy_logo.png')
plot.new()
grid::grid.raster(pic)
})
}
# Run App ----------------------------------------------------------------
shinyApp(ui, server)
ui <- navbarPage("Your Energy", inverse = TRUE,
tabPanel("Overview", icon = icon("home"),
titlePanel("Overview of Energy Consumption"),
sidebarLayout(
sidebarPanel(width = 3,
selectInput(inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010")),
selectInput(inputId = "SelectSub",
label = "Choose a room to compare over the years:",
choices = list("climat", "laundry", "kitchen"))
),
mainPanel(width = 9,
box(plotOutput(outputId = "smooth_avg")),
box(plotlyOutput(outputId = "bar_overview")),
box(plotlyOutput(outputId = "bar_areas")),
box(h1(""),
h4("Yearly Costs Here"),
h4("Processing..."))
)
)
),
tabPanel("Trends", icon = icon("chart-line"),
sidebarLayout(
sidebarPanel(width = 12,
h1("Past and Forecasted Trends in Energy Consumption")),
mainPanel(width = 12,
highchartOutput(outputId = "fc_trends_chart")
)
)
),
navbarMenu("More",
tabPanel("About", icon = icon("info"),
sidebarLayout(
mainPanel(width = 8,
h2("IoT Analytics", align = "center"),
h3("makes your home awesome", align = "center"),
h5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet gravida ipsum, vitae semper leo. Pellentesque lobortis laoreet aliquam. Vivamus bibendum posuere est, vitae congue magna lacinia non. Suspendisse tempus ullamcorper condimentum. Duis id tortor sit amet dolor rutrum finibus. Sed lorem purus, rhoncus eu iaculis sed, varius vitae nulla.",
align = "center")),
mainPanel(width = 4,
plotOutput(outputId = "energy_logo")
)
)
),
tabPanel("Contact", icon = icon("address-card"),
sidebarLayout(
sidebarPanel = NULL,
mainPanel = mainPanel(
width = 4,
offset = 2,
h3("Contact", align = "center"),
h4("Mr. Eric Foreman"),
h4("Senior Data Analyst"),
h4("Point Place, Wisconsin"),
h4("0800-HELLO WISCO")
)
)
)
)
)
# Server ------------------------------------------------------------------
server <- function(input, output) {
output$smooth_avg <- renderPlot({
ggplot(data = energy %>%
filter(year(Date) == input$SelectYear) %>%
group_by(Date) %>%
summarise(overall_avg = round(mean(global_wh), digits = 1))
) +
geom_smooth(aes(x = Date, y = overall_avg),
span = 0.1, se = F) +
labs(title = "Yearly E-Consumption",
subtitle = "(Smoothened)",
y = "avg Consumption in Wh per Minute",
x = "Months") +
scale_x_date(date_breaks = "1 month", date_labels = "%b")
})
output$bar_overview <- renderPlotly({
plot_ly(data = energy %>%
group_by(year, quarter) %>%
summarise(kitchen = round(sum(kitchen)/1000, digits = 1),
laundry = round(sum(laundry)/1000, digits = 1),
climat = round(sum(climat)/1000, digits = 1)) %>%
filter(year == input$SelectYear),
x = ~quarter, y = ~kitchen,
type = 'bar', name = 'Kitchen') %>%
add_trace(y = ~laundry, name = 'Laundry') %>%
add_trace(y= ~climat, name = 'Climat') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$bar_areas <- renderPlotly({
plot_ly(data = en_quart_subs %>%
filter(submeter == input$SelectSub),
x = ~quarter, y = ~yr07,
type = 'bar', name = '2007') %>%
add_trace(y = ~yr08, name = '2008') %>%
add_trace(y= ~yr09, name = '2009') %>%
add_trace(y= ~yr10, name = '2010') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$fc_trends_chart <- renderHighchart({fc_trends_chart
})
output$energy_logo <- renderPlot({
pic = readPNG('C:/Users/Gebruiker/Desktop/Esgitit/IoT Analytics/www/energy_logo.png')
plot.new()
grid::grid.raster(pic)
})
}
# Run App ----------------------------------------------------------------
shinyApp(ui, server)
ui <- navbarPage("Your Energy", inverse = TRUE,
tabPanel("Overview", icon = icon("home"),
titlePanel("Overview of Energy Consumption"),
sidebarLayout(
sidebarPanel(width = 3,
selectInput(inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010")),
selectInput(inputId = "SelectSub",
label = "Choose a room to compare over the years:",
choices = list("climat", "laundry", "kitchen"))
),
mainPanel(width = 9,
box(plotOutput(outputId = "smooth_avg")),
box(plotlyOutput(outputId = "bar_overview")),
box(plotlyOutput(outputId = "bar_areas")),
box(h4("Yearly Costs Here", align = "center"),
h4("Under Construction", align = "center"))
)
)
),
tabPanel("Trends", icon = icon("chart-line"),
sidebarLayout(
sidebarPanel(width = 12,
h1("Past and Forecasted Trends in Energy Consumption")),
mainPanel(width = 12,
highchartOutput(outputId = "fc_trends_chart")
)
)
),
navbarMenu("More",
tabPanel("About", icon = icon("info"),
sidebarLayout(
mainPanel(width = 8,
h2("IoT Analytics", align = "center"),
h3("makes your home awesome", align = "center"),
h5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet gravida ipsum, vitae semper leo. Pellentesque lobortis laoreet aliquam. Vivamus bibendum posuere est, vitae congue magna lacinia non. Suspendisse tempus ullamcorper condimentum. Duis id tortor sit amet dolor rutrum finibus. Sed lorem purus, rhoncus eu iaculis sed, varius vitae nulla.",
align = "center")),
mainPanel(width = 4,
plotOutput(outputId = "energy_logo")
)
)
),
tabPanel("Contact", icon = icon("address-card"),
sidebarLayout(
sidebarPanel = NULL,
mainPanel = mainPanel(
width = 4,
offset = 2,
h3("Contact", align = "center"),
h4("Mr. Eric Foreman"),
h4("Senior Data Analyst"),
h4("Point Place, Wisconsin"),
h4("0800-HELLO WISCO")
)
)
)
)
)
# Server ------------------------------------------------------------------
server <- function(input, output) {
output$smooth_avg <- renderPlot({
ggplot(data = energy %>%
filter(year(Date) == input$SelectYear) %>%
group_by(Date) %>%
summarise(overall_avg = round(mean(global_wh), digits = 1))
) +
geom_smooth(aes(x = Date, y = overall_avg),
span = 0.1, se = F) +
labs(title = "Yearly E-Consumption",
subtitle = "(Smoothened)",
y = "avg Consumption in Wh per Minute",
x = "Months") +
scale_x_date(date_breaks = "1 month", date_labels = "%b")
})
output$bar_overview <- renderPlotly({
plot_ly(data = energy %>%
group_by(year, quarter) %>%
summarise(kitchen = round(sum(kitchen)/1000, digits = 1),
laundry = round(sum(laundry)/1000, digits = 1),
climat = round(sum(climat)/1000, digits = 1)) %>%
filter(year == input$SelectYear),
x = ~quarter, y = ~kitchen,
type = 'bar', name = 'Kitchen') %>%
add_trace(y = ~laundry, name = 'Laundry') %>%
add_trace(y= ~climat, name = 'Climat') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$bar_areas <- renderPlotly({
plot_ly(data = en_quart_subs %>%
filter(submeter == input$SelectSub),
x = ~quarter, y = ~yr07,
type = 'bar', name = '2007') %>%
add_trace(y = ~yr08, name = '2008') %>%
add_trace(y= ~yr09, name = '2009') %>%
add_trace(y= ~yr10, name = '2010') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$fc_trends_chart <- renderHighchart({fc_trends_chart
})
output$energy_logo <- renderPlot({
pic = readPNG('C:/Users/Gebruiker/Desktop/Esgitit/IoT Analytics/www/energy_logo.png')
plot.new()
grid::grid.raster(pic)
})
}
# Run App ----------------------------------------------------------------
shinyApp(ui, server)
ui <- navbarPage("Your Energy", inverse = TRUE,
tabPanel("Overview", icon = icon("home"),
titlePanel("Overview of Energy Consumption"),
sidebarLayout(
sidebarPanel(width = 3,
selectInput(inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010")),
selectInput(inputId = "SelectSub",
label = "Choose a room to compare over the years:",
choices = list("climat", "laundry", "kitchen"))
),
mainPanel(width = 9,
box(plotOutput(outputId = "smooth_avg")),
box(plotlyOutput(outputId = "bar_overview")),
box(plotlyOutput(outputId = "bar_areas")),
box(h4("Yearly Costs Here", align = "center"),
h4("Under Construction", align = "center"))
)
)
),
tabPanel("Trends", icon = icon("chart-line"),
sidebarLayout(
sidebarPanel(width = 12,
h1("Past and Forecasted Trends in Energy Consumption")),
mainPanel(width = 12,
highchartOutput(outputId = "fc_trends_chart")
)
)
),
navbarMenu("More",
tabPanel("About", icon = icon("info"),
sidebarLayout(
mainPanel(width = 8,
h2("IoT Analytics", align = "center"),
h3("makes your home awesome", align = "center"),
h5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet gravida ipsum, vitae semper leo. Pellentesque lobortis laoreet aliquam. Vivamus bibendum posuere est, vitae congue magna lacinia non. Suspendisse tempus ullamcorper condimentum. Duis id tortor sit amet dolor rutrum finibus. Sed lorem purus, rhoncus eu iaculis sed, varius vitae nulla.",
align = "center")),
mainPanel(width = 4,
plotOutput(outputId = "energy_logo")
)
)
),
tabPanel("Contact", icon = icon("address-card"),
sidebarLayout(
sidebarPanel = NULL,
mainPanel = mainPanel(
width = 4,
offset = 2,
h3("Contact", align = "center"),
h4("Mr. Eric Foreman"),
h4("Senior Data Analyst"),
h4("Point Place, Wisconsin"),
h4("0800-HELLO WISCO")
)
)
)
)
)
# Server ------------------------------------------------------------------
server <- function(input, output) {
output$smooth_avg <- renderPlot({
ggplot(data = energy %>%
filter(year(Date) == input$SelectYear) %>%
group_by(Date) %>%
summarise(overall_avg = round(mean(global_wh), digits = 1))
) +
geom_smooth(aes(x = Date, y = overall_avg),
span = 0.1, se = F) +
labs(title = "Yearly E-Consumption",
subtitle = "(Smoothened)",
y = "avg Consumption in Wh per Minute",
x = "Months") +
scale_x_date(date_breaks = "1 month", date_labels = "%b")
})
output$bar_overview <- renderPlotly({
plot_ly(data = energy %>%
group_by(year, quarter) %>%
summarise(kitchen = round(sum(kitchen)/1000, digits = 1),
laundry = round(sum(laundry)/1000, digits = 1),
climat = round(sum(climat)/1000, digits = 1)) %>%
filter(year == input$SelectYear),
x = ~quarter, y = ~kitchen,
type = 'bar', name = 'Kitchen') %>%
add_trace(y = ~laundry, name = 'Laundry') %>%
add_trace(y= ~climat, name = 'Climat') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$bar_areas <- renderPlotly({
plot_ly(data = en_quart_subs %>%
filter(submeter == input$SelectSub),
x = ~quarter, y = ~yr07,
type = 'bar', name = '2007') %>%
add_trace(y = ~yr08, name = '2008') %>%
add_trace(y= ~yr09, name = '2009') %>%
add_trace(y= ~yr10, name = '2010') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$fc_trends_chart <- renderHighchart({fc_trends_chart
})
output$energy_logo <- renderPlot({
pic = readPNG('C:/Users/Gebruiker/Desktop/Esgitit/IoT Analytics/www/energy_logo.png')
plot.new()
grid::grid.raster(pic)
})
}
# Run App ----------------------------------------------------------------
shinyApp(ui, server)
ui <- navbarPage("Your Energy", inverse = TRUE,
tabPanel("Overview", icon = icon("home"),
titlePanel("Overview of Energy Consumption"),
sidebarLayout(
sidebarPanel(width = 3,
selectInput(inputId = "SelectYear",
label = "Choose a year for the line chart to show:",
choices = list("2007", "2008", "2009", "2010")),
selectInput(inputId = "SelectSub",
label = "Choose a room to compare over the years:",
choices = list("climat", "laundry", "kitchen"))
),
mainPanel(width = 9,
box(plotOutput(outputId = "smooth_avg")),
box(plotlyOutput(outputId = "bar_overview")),
box(plotlyOutput(outputId = "bar_areas")),
box(h4("Yearly Costs Here", align = "center"),
h4("Under Construction", align = "center"))
)
)
),
tabPanel("Trends", icon = icon("chart-line"),
sidebarLayout(
sidebarPanel(width = 12,
h1("Past and Forecasted Trends in Energy Consumption")),
mainPanel(width = 12,
highchartOutput(outputId = "fc_trends_chart")
)
)
),
navbarMenu("More",
tabPanel("About", icon = icon("info"),
sidebarLayout(
mainPanel(width = 8,
h2("IoT Analytics", align = "center"),
h3("makes your home awesome", align = "center"),
h5("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet gravida ipsum, vitae semper leo. Pellentesque lobortis laoreet aliquam. Vivamus bibendum posuere est, vitae congue magna lacinia non. Suspendisse tempus ullamcorper condimentum. Duis id tortor sit amet dolor rutrum finibus. Sed lorem purus, rhoncus eu iaculis sed, varius vitae nulla.",
align = "center")),
mainPanel(width = 4,
plotOutput(outputId = "energy_logo")
)
)
),
tabPanel("Contact", icon = icon("address-card"),
sidebarLayout(
sidebarPanel = NULL,
mainPanel = mainPanel(
width = 4,
offset = 2,
h3("Contact", align = "center"),
h4("Mr. Eric Foreman"),
h4("Senior Data Analyst"),
h4("Point Place, Wisconsin"),
h4("0800-HELLO WISCO")
)
)
)
)
)
# Server ------------------------------------------------------------------
server <- function(input, output) {
output$smooth_avg <- renderPlot({
ggplot(data = energy %>%
filter(year(Date) == input$SelectYear) %>%
group_by(Date) %>%
summarise(overall_avg = round(mean(global_wh), digits = 1))
) +
geom_smooth(aes(x = Date, y = overall_avg),
span = 0.1, se = F) +
labs(title = "Yearly E-Consumption",
subtitle = "(Smoothened)",
y = "avg Consumption in Wh per Minute",
x = "Months") +
scale_x_date(date_breaks = "1 month", date_labels = "%b")
})
output$bar_overview <- renderPlotly({
plot_ly(data = energy %>%
group_by(year, quarter) %>%
summarise(kitchen = round(sum(kitchen)/1000, digits = 1),
laundry = round(sum(laundry)/1000, digits = 1),
climat = round(sum(climat)/1000, digits = 1)) %>%
filter(year == input$SelectYear),
x = ~quarter, y = ~kitchen,
type = 'bar', name = 'Kitchen') %>%
add_trace(y = ~laundry, name = 'Laundry') %>%
add_trace(y= ~climat, name = 'Climat') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$bar_areas <- renderPlotly({
plot_ly(data = en_quart_subs %>%
filter(submeter == input$SelectSub),
x = ~quarter, y = ~yr07,
type = 'bar', name = '2007') %>%
add_trace(y = ~yr08, name = '2008') %>%
add_trace(y= ~yr09, name = '2009') %>%
add_trace(y= ~yr10, name = '2010') %>%
layout(yaxis = list(title = 'Kwh'), barmode = 'group')
})
output$fc_trends_chart <- renderHighchart({fc_trends_chart
})
output$energy_logo <- renderPlot({
pic = readPNG('C:/Users/Gebruiker/Desktop/Esgitit/IoT Analytics/www/energy_logo.png')
plot.new()
grid::grid.raster(pic)
})
}
# Run App ----------------------------------------------------------------
shinyApp(ui, server)
?save
# Save data frame ---------------------------------------------------------
# set local directory
setwd("C:/Users/Gebruiker/Desktop//Esgitit/IoT Analytics")
# save energy as rds
saveRDS(energy, file = "energy.RDS")
rm(list = ls(all.names = TRUE))
